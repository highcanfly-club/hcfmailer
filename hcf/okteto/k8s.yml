---
apiVersion: v1
kind: Secret
metadata:
  name: postgres
  namespace: $OKTETO_NS
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres
type: Opaque
stringData:
  postgres-password: $POSTGRES_PASSWORD

---
apiVersion: v1
kind: Secret
metadata:
  name: listmonk
  namespace: $OKTETO_NS
  labels:
    app.kubernetes.io/name: listmonk
    app.kubernetes.io/instance: listmonk
type: Opaque
stringData:
  listmonk-password: $LISTMONK_PASSWORD
  ssh-pubkey: $SSH_PUBKEY

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: hcfmailing-pgsql
  name: hcfmailing-pgsql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: hcfmailing-uploads
  name: hcfmailing-uploads
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: hcfmailing-backups
  name: hcfmailing-backups
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: nginx-data
  name: nginx-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: nginx-letsencrypt
  name: nginx-letsencrypt
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: newsletter
  namespace: $OKTETO_NS
  annotations:
    # dev.okteto.com/generate-host: "true"
spec:
  rules:
  - host: $OKTETO_FQDN_HCFMAILER
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: hcfmailer      
              port: 
                number: 9000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-nginx
  namespace: $OKTETO_NS
  annotations:
    # dev.okteto.com/generate-host: "true"
spec:
  rules:
  - host: admin-nginx-$OKTETO_NS.cloud.okteto.net
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: nginx
              port:
                number: 81


---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: hcfmailer
  name: hcfmailer
spec:
  type: ClusterIP
  ports:
    - name: "3022"
      port: 3022
      targetPort: 3022
    - name: "9000"
      port: 9000
      targetPort: 9000
  selector:
    io.kompose.service: hcfmailer
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
    - name: "81"
      port: 81
      targetPort: 81
    - name: "443"
      port: 443
      targetPort: 443
  selector:
    io.kompose.service: nginx
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: postgres
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: smtpd
  name: smtpd
spec:
  ports:
    - name: "25"
      port: 25
      targetPort: 25
  selector:
    io.kompose.service: smtpd
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: hcfmailer
  name: hcfmailer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: hcfmailer
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/hcf-default: "true"
        io.kompose.service: hcfmailer
    spec:
      containers:
        - env:
            - name: SSH_PUBKEY
              valueFrom:
                secretKeyRef:
                  name: listmonk
                  key: ssh-pubkey
            - name: LISTMONK_app__address
              value: 0.0.0.0:9000
            - name: LISTMONK_app__admin_password
              valueFrom:
                secretKeyRef:
                  name: listmonk
                  key: listmonk-password
            - name: LISTMONK_app__admin_username
              value: $LISTMONK_USER
            - name: LISTMONK_db__database
              value: $POSTGRES_DB
            - name: LISTMONK_db__host
              value: postgres
            - name: LISTMONK_db__password
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: postgres-password
            - name: LISTMONK_db__port
              value: "5432"
            - name: LISTMONK_db__ssl_mode
              value: "disable"
            - name: LISTMONK_db__user
              value: $POSTGRES_USER
          image: highcanfly/hcfmailer:latest
          name: hcfmailer
          ports:
            - containerPort: 3022
            - containerPort: 9000
          resources:
            limits:
              cpu: 900m
              memory: "536870912"
          volumeMounts:
            - mountPath: /listmonk/uploads
              name: hcfmailing-uploads
            - mountPath: /listmonk/backups
              name: hcfmailing-backups
      volumes:
        - name: hcfmailing-uploads
          persistentVolumeClaim:
            claimName: hcfmailing-uploads
        - name: hcfmailing-backups
          persistentVolumeClaim:
            claimName: hcfmailing-backups
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  # replicas: 1
  # SCALE TO 0
  replicas: 0
  selector:
    matchLabels:
      io.kompose.service: nginx
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/hcf-default: "true"
        io.kompose.service: nginx
    spec:
      containers:
        - image: jc21/nginx-proxy-manager:latest
          name: nginx
          ports:
            - containerPort: 80
            - containerPort: 81
            - containerPort: 443
          resources:
            limits:
              cpu: 250m
              memory: "214748364"
          volumeMounts:
            - mountPath: /data
              name: nginx-data
            - mountPath: /etc/letsencrypt
              name: nginx-letsencrypt
      restartPolicy: Always
      subdomain: hcfmailing
      volumes:
        - name: nginx-data
          persistentVolumeClaim:
            claimName: nginx-data
        - name: nginx-letsencrypt
          persistentVolumeClaim:
            claimName: nginx-letsencrypt
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/hcf-default: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DATABASE
              value: $POSTGRES_DB
            - name: POSTGRESQL_VOLUME_DIR
              value: /bitnami/postgresql
            - name: PGDATA
              value: /bitnami/postgresql/data
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: postgres-password
            - name: POSTGRES_USERNAME
              value: $POSTGRES_USER
            - name: BITNAMI_DEBUG
              value: "true"
          image: bitnami/postgresql:latest
          name: postgres
          ports:
            - containerPort: 5432
          resources:
            limits:
              cpu: 500m
              memory: "536870912"
          volumeMounts:
            - mountPath: /bitnami
              name: hcfmailing-pgsql
      restartPolicy: Always
      volumes:
        - name: hcfmailing-pgsql
          persistentVolumeClaim:
            claimName: hcfmailing-pgsql
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: smtpd
  name: smtpd
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: smtpd
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/hcf-default: "true"
        io.kompose.service: smtpd
    spec:
      containers:
        - env:
            - name: ALLOWED_SENDER_DOMAINS
              value: $ALLOWED_SENDER_DOMAINS
            - name: DKIM_PRIVATE_KEY
              value: $DKIM_PRIVATE_KEY
            - name: DKIM_SELECTOR
              value: $DKIM_SELECTOR
          image: highcanfly/smtp-relay:latest
          name: smtpd
          ports:
            - containerPort: 25
          resources:
            limits:
              cpu: 900m
              memory: "322122547"
      restartPolicy: Always
status: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: webssh
  name: webssh
spec:
  type: ClusterIP
  ports:
    - name: "8888"
      port: 8888
      targetPort: 8888
  selector:
    io.kompose.service: webssh
status:
  loadBalancer: {}
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: webssh
  name: webssh
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webssh
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o okteto/k8s.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/hcf-default: "true"
        io.kompose.service: webssh
    spec:
      containers:
        - env:
            - name: LISTMONK_SSH
              value: "3022"
          image: highcanfly/webssh:latest
          name: webssh
          ports:
            - containerPort: 8888
          resources:
            limits:
              cpu: 500m
              memory: "536870912"
      restartPolicy: Always
status: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin
  namespace: $OKTETO_NS
  annotations:
    # dev.okteto.com/generate-host: "true"
spec:
  rules:
  - host: admin-$OKTETO_NS.cloud.okteto.net
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: webssh      
              port: 
                number: 8888